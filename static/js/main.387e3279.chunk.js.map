{"version":3,"sources":["components/clock.js","components/settings.js","components/controls.js","App.js","serviceWorker.js","index.js"],"names":["c","Settings","props","className","id","onClick","incMe","this","sesLen","decMe","breakLen","Component","Controls","clickToggle","toggle","state","setState","stopClock","startClock","class","aria-hidden","resetClock","Clock","newSes","setInterval","seconds","minutes","dangerLookOn","clearInterval","break","typeChecker","document","getElementById","classList","add","dangerLookOff","remove","audioObj","currentTime","play","title","displayTime","val","reset","isRunning","readOnly","value","src","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8KAGIA,E,oECiCWC,E,kDAjCX,WAAYC,GAAQ,uCACVA,G,qDAIA,IAAD,OACL,OACI,yBAAKC,UAAU,YACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,gBAAgBC,GAAG,gBAAlC,kBAGA,yBAAKD,UAAU,oBACX,4BAAQE,QAAS,kBAAI,EAAKH,MAAMI,MAAM,SAAtC,KACA,2BAAIC,KAAKL,MAAMM,QACf,4BAAQH,QAAS,kBAAM,EAAKH,MAAMO,MAAM,SAAxC,OAGR,yBAAKN,UAAU,qBACX,yBAAKA,UAAU,iBAAf,gBAGA,yBAAKA,UAAU,oBACX,4BAAQE,QAAS,kBAAM,EAAKH,MAAMI,MAAM,WAAxC,KACA,2BAAIC,KAAKL,MAAMQ,UACf,4BAAQL,QAAS,kBAAM,EAAKH,MAAMO,MAAM,WAAxC,Y,GA1BDE,aCiCRC,E,kDAhCX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IAQVW,YAAa,WACT,IAAIC,EAAQ,EAAKC,MAAMD,OACvB,EAAKE,SAAS,CACVF,QAAQA,IAEXA,EAID,EAAKZ,MAAMe,YAHX,EAAKf,MAAMgB,cAZX,EAAKH,MAAQ,CACRD,QAAO,GAJG,E,qDAsBT,IAAD,OACL,OACI,yBAAKX,UAAU,eACX,4BAAQE,QAAS,kBAAM,EAAKQ,gBAAe,uBAAGM,MAAM,aAAaC,cAAY,SAAW,uBAAGD,MAAM,cAAcC,cAAY,UAC3H,4BAAQf,QAASE,KAAKL,MAAMmB,YAAY,uBAAGF,MAAM,wB,GA3B1CR,aFgLRW,E,kDA7KX,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IAgBVgB,WAAY,WAER,EAAKF,SAAS,CACVO,QAAO,IAGXvB,EAAGwB,aAAY,WACY,GAApB,EAAKT,MAAMU,SAEV,EAAKT,SAAS,CACVS,QAAS,EAAKV,MAAMU,QAAU,IAEV,IAArB,EAAKV,MAAMW,SACV,EAAKC,iBAIT,EAAKX,SAAS,CACVS,QAAS,KAEU,GAApB,EAAKV,MAAMW,QAEV,EAAKV,SAAS,CACVU,QAAQ,EAAKX,MAAMW,QAAQ,KAK/BE,cAAc5B,GACd,EAAKgB,SAAS,CAACa,OAAO,EAAKd,MAAMc,QACjC,EAAKC,kBAGd,MAlDY,EAqDnBb,UAAW,WACPW,cAAc5B,IAtDC,EAyDnB2B,aAAc,WAEAI,SAASC,eAAe,OAC7BC,UAAUC,IAAI,eA5DJ,EA+DnBC,cAAe,WACAJ,SAASC,eAAe,OAC9BC,UAAUG,OAAO,eAjEP,EAoEnBN,YAAa,WACTF,cAAc5B,GACd,EAAKmC,gBACL,IAAIE,EAAWN,SAASC,eAAe,QACvB,MAAZK,IACAA,EAASC,YAAc,EACvBD,EAASE,QAGV,EAAKxB,MAAMc,OACV,EAAKb,SAAS,CACVU,QAAQ,EAAKX,MAAML,SACnBe,QAAQ,EACRe,MAAM,UAGV,EAAKtB,eAGL,EAAKF,SAAS,CACVU,QAAS,EAAKX,MAAMP,OACpBiB,QAAS,EACTe,MAAO,YAEX,EAAKtB,eA5FM,EAiGnBuB,YAAa,SAACC,GACV,MAAQ,OAALA,EAAoB,EAAK3B,MAAMW,QAAU,GAAtB,WAAgC,EAAKX,MAAMW,SAAY,EAAKX,MAAMW,QAC3E,OAALgB,EAAoB,EAAK3B,MAAMU,QAAU,GAAtB,WAAgC,EAAKV,MAAMU,SAAY,EAAKV,MAAMU,aAAxF,GAnGU,EAsGnBJ,WAAY,WACRO,cAAc5B,GACd,EAAKgB,SAAS,CACVR,OAAQ,GACRE,SAAU,EACVgB,QAAS,GACTD,QAAS,EACTc,MAAM,EACNI,OAAO,EACPd,OAAO,EACPW,MAAO,UACPI,WAAU,EACVrB,QAAO,KAlHI,EAsHnBjB,MAAO,SAACoC,GACJ,IAAIlC,EAAS,EAAKO,MAAMP,OACpBE,EAAW,EAAKK,MAAML,SACtBgB,EAAS,EAAKX,MAAMW,QACpBH,EAAQ,EAAKR,MAAMQ,OACpBA,GAAc,OAALmB,GAAYlC,EAAO,GAC3B,EAAKQ,SAAS,CACVR,OAAOA,EAAO,EACdkB,QAAQA,EAAQ,IAEdH,GAAc,SAALmB,GAAehC,EAAS,IACvC,EAAKM,SAAS,CACVN,SAAUA,EAAW,KAlId,EAwInBD,MAAQ,SAACiC,GACL,IAAIlC,EAAS,EAAKO,MAAMP,OACpBE,EAAW,EAAKK,MAAML,SACtBgB,EAAU,EAAKX,MAAMW,QACrBH,EAAS,EAAKR,MAAMQ,OACpBA,GAAkB,OAAPmB,GAAgBlC,EAAQ,EACnC,EAAKQ,SAAS,CACVR,OAAQA,EAAS,EACjBkB,QAASA,EAAU,IAEhBH,GAAkB,SAAPmB,GAAmBhC,EAAW,GAChD,EAAKM,SAAS,CACVN,SAAUA,EAAW,KAjJ7B,EAAKK,MAAQ,CACTP,OAAO,GACPE,SAAS,EACTgB,QAAQ,GACRD,QAAS,EACTc,MAAK,EACLI,OAAM,EACNd,OAAM,EACNW,MAAM,UACNI,WAAW,EACXrB,QAAO,GAbI,E,qDA2JT,IAAD,OACL,OACI,yBAAKpB,UAAU,aACX,kBAAC,EAAD,CAAUK,OAAQD,KAAKQ,MAAMP,OAAQE,SAAUH,KAAKQ,MAAML,SAAUJ,MAAO,SAACoC,GAAD,OAAS,EAAKpC,MAAMoC,IAAMjC,MAAO,SAACiC,GAAD,OAAS,EAAKjC,MAAMiC,MAChI,yBAAKvC,UAAU,SACX,2BAAO0C,UAAQ,EAACC,MAAOvC,KAAKQ,MAAMyB,MAAOrC,UAAU,eAAeC,GAAG,WAEzE,yBAAKD,UAAU,cACX,2BAAO0C,UAAQ,EAACC,MAAOvC,KAAKkC,YAAY,OAAQtC,UAAU,OAAOC,GAAG,QACpE,2BAAOyC,UAAQ,EAACC,MAAOvC,KAAKkC,YAAY,OAAQtC,UAAU,OAAOC,GAAG,SAExE,kBAAC,EAAD,CAAUc,WAAYX,KAAKW,WAAYD,UAAWV,KAAKU,UAAWI,WAAYd,KAAKc,WAAYkB,KAAMhC,KAAKQ,MAAMwB,OAChH,2BAAOQ,IAAI,6DAA6D3C,GAAG,c,GAxKvEO,a,MGSLqC,MARf,WACE,OACE,yBAAK7C,UAAU,MAAMC,GAAG,OACtB,kBAAC,EAAD,QCIc6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzB,SAASC,eAAe,SDyHpB,kBAAmByB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.387e3279.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Settings from './settings';\r\nimport Controls from './controls';\r\nvar c;\r\nclass Clock extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            sesLen:25,\r\n            breakLen:5,\r\n            minutes:25,\r\n            seconds :0,\r\n            play:false,\r\n            reset:false,\r\n            break:false,\r\n            title:'Session',\r\n            isRunning: false,\r\n            newSes:true\r\n        }\r\n    }\r\n   \r\n    startClock= () =>{\r\n\r\n        this.setState({\r\n            newSes:false\r\n        })\r\n        \r\n        c =setInterval(() => {\r\n            if(this.state.seconds!=0) {\r\n                \r\n                this.setState({\r\n                    seconds: this.state.seconds - 1\r\n                })\r\n                if(this.state.minutes===0) {\r\n                    this.dangerLookOn();\r\n                }\r\n            }\r\n            else {\r\n                this.setState({\r\n                    seconds: 59\r\n                })\r\n                if(this.state.minutes!=0){\r\n                    \r\n                    this.setState({\r\n                        minutes:this.state.minutes-1\r\n                    })\r\n                }\r\n                else {\r\n                    \r\n                    clearInterval(c);\r\n                    this.setState({break:!this.state.break})\r\n                    this.typeChecker()\r\n                } \r\n            }\r\n        }, 1000)        \r\n    }\r\n\r\n    stopClock =()=>{\r\n        clearInterval(c);\r\n    }\r\n\r\n    dangerLookOn =() =>{\r\n        \r\n        let look =document.getElementById(\"App\")\r\n        look.classList.add(\"App-danger\")\r\n        \r\n    }\r\n    dangerLookOff= ()=>{\r\n        let look = document.getElementById(\"App\")\r\n        look.classList.remove(\"App-danger\")\r\n    }\r\n\r\n    typeChecker =() =>{\r\n        clearInterval(c);\r\n        this.dangerLookOff();\r\n        let audioObj = document.getElementById(\"beep\")\r\n        if (audioObj != null) {\r\n            audioObj.currentTime = 0;\r\n            audioObj.play()\r\n        }\r\n       \r\n        if(this.state.break) {\r\n            this.setState({\r\n                minutes:this.state.breakLen,\r\n                seconds:0,\r\n                title:'Break'\r\n            })\r\n        \r\n            this.startClock()\r\n        }\r\n        else {\r\n            this.setState({\r\n                minutes: this.state.sesLen,\r\n                seconds: 0,\r\n                title: 'Session'\r\n            })\r\n            this.startClock()\r\n        }\r\n    }\r\n\r\n\r\n    displayTime =(val) =>{\r\n        if(val=='min') return (this.state.minutes < 10 )? `0${this.state.minutes}` : this.state.minutes\r\n        else if(val=='sec') return (this.state.seconds < 10 )? `0${this.state.seconds}` : this.state.seconds\r\n    }\r\n    \r\n    resetClock =() =>{\r\n        clearInterval(c)\r\n        this.setState({\r\n            sesLen: 25,\r\n            breakLen: 5,\r\n            minutes: 25,\r\n            seconds: 0,\r\n            play: false,\r\n            reset: false,\r\n            break: false,\r\n            title: 'Session',\r\n            isRunning:false,\r\n            newSes:true\r\n        })\r\n    }\r\n\r\n    incMe= (val) =>{\r\n        let sesLen = this.state.sesLen\r\n        let breakLen = this.state.breakLen\r\n        let minutes= this.state.minutes\r\n        let newSes= this.state.newSes\r\n        if(newSes&&(val==\"ses\"&&sesLen<60)) {\r\n            this.setState({\r\n                sesLen:sesLen+1,\r\n                minutes:minutes+1\r\n            })\r\n        } else if(newSes&&(val==\"break\")&&breakLen<60) {\r\n            this.setState({\r\n                breakLen: breakLen + 1,\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    decMe = (val) => {\r\n        let sesLen = this.state.sesLen\r\n        let breakLen = this.state.breakLen\r\n        let minutes = this.state.minutes\r\n        let newSes = this.state.newSes\r\n        if (newSes && (val == \"ses\" && sesLen >1)) {\r\n            this.setState({\r\n                sesLen: sesLen - 1,\r\n                minutes: minutes - 1\r\n            })\r\n        } else if (newSes && (val == \"break\") && breakLen > 1) {\r\n            this.setState({\r\n                breakLen: breakLen - 1,\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"work-area\">\r\n                <Settings sesLen={this.state.sesLen} breakLen={this.state.breakLen} incMe={(val) => this.incMe(val)} decMe={(val) => this.decMe(val)}/>\r\n                <div className=\"title\" >\r\n                    <input readOnly value={this.state.title} className=\"title-normal\" id=\"title\"/>\r\n                </div>\r\n                <div className=\"clock-view\">\r\n                    <input readOnly value={this.displayTime('min')} className=\"time\" id=\"min\" />\r\n                    <input readOnly value={this.displayTime('sec')} className=\"time\" id=\"sec\" />\r\n                </div>\r\n                <Controls startClock={this.startClock} stopClock={this.stopClock} resetClock={this.resetClock} play={this.state.play}/>\r\n                <audio src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/3/success.mp3\" id=\"beep\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clock\r\n","import React, { Component } from 'react'\r\n\r\nclass Settings extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"set-time\">\r\n                <div className=\"setting-structure\">\r\n                    <div className=\"setting-title\" id=\"break-length\">\r\n                        Session Length\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        <button onClick={()=>this.props.incMe(\"ses\")}>+</button>\r\n                        <p>{this.props.sesLen}</p>\r\n                        <button onClick={() => this.props.decMe(\"ses\")}>-</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"setting-structure\">\r\n                    <div className=\"setting-title\">\r\n                        Break Length\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        <button onClick={() => this.props.incMe(\"break\")}>+</button>\r\n                        <p>{this.props.breakLen}</p>\r\n                        <button onClick={() => this.props.decMe(\"break\")}>-</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings\r\n","import React, { Component } from 'react'\r\n\r\nclass Controls extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             toggle:false\r\n        }\r\n    }\r\n    \r\n\r\n    clickToggle= ()=>{\r\n        let toggle= this.state.toggle\r\n        this.setState({\r\n            toggle:!toggle\r\n        })\r\n     if(!toggle) {\r\n        this.props.startClock()\r\n    }\r\n    else {\r\n        this.props.stopClock()\r\n    }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"control-pad\">\r\n                <button onClick={() => this.clickToggle()}><i class=\"fa fa-play\" aria-hidden=\"true\"></i><i class=\"fa fa-pause\" aria-hidden=\"true\"></i></button>\r\n                <button onClick={this.props.resetClock}><i class=\"fa fa-retweet\" ></i></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controls\r\n","import React from 'react';\nimport Clock from './components/clock'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\" id=\"App\">\n      <Clock />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}